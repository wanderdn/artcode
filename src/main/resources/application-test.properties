#elastic.host=elasticsearch:9200
management.server.port=8787
management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.endpoints.web.exposure.include=prometheus
management.endpoints.jmx.exposure.include=health,info
#spring.application.name=kafka-elastic-sink-service-2
spring.application.cloud.stream.default.consumer.useNativeDecoding=true
spring.application.cloud.stream.function.definition=loggerProcessor
spring.application.cloud.stream.function.bindings.loggerProcessor-in-0=input
spring.application.cloud.stream.bindings.input.destination=external-integration-message-log
spring.application.cloud.stream.bindings.input.content-type=application/*+avro
spring.application.cloud.stream.kafka.binder.brokers=${IPC_KAFKA_BROKERS}
spring.application.cloud.stream.kafka.binder.configuration.schema.registry.url=null
spring.application.cloud.stream.kafka.binder.configuration.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.application.cloud.stream.kafka.binder.configuration.value.deserializer=io.confluent.kafka.streams.serdes.avro.SpecificAvroDeserializer
spring.application.cloud.stream.kafka.binder.configuration.deserialization.exception.handler=org.apache.kafka.streams.errors.LogAndContinueExceptionHandler
spring.application.cloud.stream.binders.logger.type=kafka
spring.application.cloud.stream.binders.logger.environment.spring.cloud.stream.kafka.binder.brokers=${IPC_KAFKA_BROKERS}
spring.application.cloud.stream.binders.logger.environment.spring.cloud.stream.kafka.binder.consumer-properties.group-id=kafka-elastic-sink-service-2
spring.application.cloud.stream.binders.logger.environment.spring.cloud.stream.kafka.binder.consumer-properties.schema.registry.url=${AVRO_SCHEMA_REGISTRY_URL}
spring.application.cloud.stream.binders.logger.environment.spring.cloud.stream.kafka.binder.consumer-properties.auto.register.schemas=false
spring.application.cloud.stream.binders.logger.environment.spring.cloud.stream.kafka.binder.consumer-properties.specific.avro.reader=true
spring.application.cloud.stream.binders.logger.environment.spring.cloud.stream.kafka.binder.consumer-properties.key.deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.application.cloud.stream.binders.logger.environment.spring.cloud.stream.kafka.binder.consumer-properties.value.deserializer=io.confluent.kafka.streams.serdes.avro.SpecificAvroDeserializer
spring.application.cloud.stream.binders.logger.environment.spring.cloud.stream.kafka.binder.configuration.allow.auto.create.topics=true
logging.level.root=Trace
logging.level.com.examle=debug
